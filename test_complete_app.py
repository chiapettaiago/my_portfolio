#!/usr/bin/env python3
import requests
import sys

# Configura√ß√µes do teste
BASE_URL = "http://localhost:7000"
USERNAME = "Iago"
PASSWORD = "admin123"

def test_login():
    """Testa o login via POST request"""
    
    print("=" * 60)
    print("TESTE DE LOGIN AUTOMATIZADO")
    print("=" * 60)
    
    session = requests.Session()
    
    try:
        # 1. Acessar a p√°gina de login para obter o formul√°rio
        print("1. Acessando p√°gina de login...")
        login_page = session.get(f"{BASE_URL}/login")
        
        if login_page.status_code != 200:
            print(f"‚úó Erro ao acessar p√°gina de login: {login_page.status_code}")
            return False
        
        print(f"‚úì P√°gina de login acess√≠vel (Status: {login_page.status_code})")
        
        # 2. Tentar fazer login
        print(f"2. Tentando login com usu√°rio: {USERNAME}")
        login_data = {
            'username': USERNAME,
            'password': PASSWORD
        }
        
        login_response = session.post(f"{BASE_URL}/login", data=login_data, allow_redirects=False)
        
        print(f"Response status: {login_response.status_code}")
        print(f"Response headers: {dict(login_response.headers)}")
        
        # 3. Verificar se o login foi bem-sucedido
        if login_response.status_code == 302:  # Redirect ap√≥s login bem-sucedido
            redirect_location = login_response.headers.get('Location', '')
            print(f"‚úì Login bem-sucedido! Redirecionando para: {redirect_location}")
            
            # 4. Verificar se consegue acessar √°rea administrativa
            print("3. Testando acesso √† √°rea administrativa...")
            admin_response = session.get(f"{BASE_URL}/posts")
            
            if admin_response.status_code == 200:
                print("‚úì Acesso √† √°rea administrativa bem-sucedido!")
                return True
            else:
                print(f"‚úó Erro ao acessar √°rea administrativa: {admin_response.status_code}")
                return False
                
        elif login_response.status_code == 200:
            # Se retornou 200, pode ser que o login falhou e voltou para a p√°gina de login
            if "Usu√°rio/senha inv√°lidos" in login_response.text:
                print("‚úó Login falhou: Usu√°rio/senha inv√°lidos")
            else:
                print("‚úó Login falhou: Retornou para p√°gina de login")
            return False
        else:
            print(f"‚úó Erro inesperado no login: {login_response.status_code}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚úó Erro: N√£o foi poss√≠vel conectar ao servidor Flask")
        print("Certifique-se de que o servidor est√° rodando em http://localhost:7000")
        return False
    except Exception as e:
        print(f"‚úó Erro inesperado: {str(e)}")
        return False

def test_home_page():
    """Testa se a p√°gina inicial est√° funcionando"""
    print("4. Testando p√°gina inicial...")
    
    try:
        response = requests.get(f"{BASE_URL}/")
        if response.status_code == 200:
            print("‚úì P√°gina inicial funcionando!")
            return True
        else:
            print(f"‚úó Erro na p√°gina inicial: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚úó Erro ao testar p√°gina inicial: {str(e)}")
        return False

if __name__ == "__main__":
    home_ok = test_home_page()
    login_ok = test_login()
    
    print("\n" + "=" * 60)
    print("RESUMO DOS TESTES:")
    print(f"P√°gina inicial: {'‚úì OK' if home_ok else '‚úó FALHOU'}")
    print(f"Sistema de login: {'‚úì OK' if login_ok else '‚úó FALHOU'}")
    
    if home_ok and login_ok:
        print("\nüéâ TODOS OS TESTES PASSARAM!")
        print("A migra√ß√£o para Firebase foi conclu√≠da com sucesso!")
    else:
        print("\n‚ö†Ô∏è  ALGUNS TESTES FALHARAM!")
        print("Verifique os logs acima para mais detalhes.")
    
    print("=" * 60)
